
-* File wor02_02_data_fin_changes.fex

-TYPE ***********************************************
-TYPE wor02_02_data_fin_changes.fex
-TYPE ***********************************************

-************************************************************
-* Notes:
-*   - Measures: Normal Fin changes (4+ hours before sched departure), Urgent (0-4 hrs),
-*       Irrop Fin Changes (when aircraft is on the ground)
-************************************************************

-*-INCLUDE ../Operational_Performance_Review/wor02_01_parameters.fex
-*-INCLUDE /WFC/Repository/SOC/Production/Operational_Performance_Review/wor02_01_parameters.fex
-*INCLUDE /WFC/Repository/SOC/Production/OPR_Report/wor02_01_parameters.fex
-INCLUDE IBFS:/WFC/Repository/Ops_Analytics/OPS/Reports/OTP_Reports/OPR_Report/wor02_01_parameters.fex

-*SET TRACEOFF=ALL
-*SET TRACEON=SQLAGGR//CLIENT
-*SET TRACEON=STMTRACE//CLIENT
-*SET TRACEUSER=CLIENT
-*SET XRETRIEVAL = OFF

SET TITLELINE = SKIP
SET ASNAMES = ON
SET HOLDMISS = ON
SET NULL = ON
SET HOLDLIST = PRINTONLY
SET BYDISPLAY = ON


-*-SET &start_date_1 = IF &start_date_rolling_months LE &start_date_MTD THEN &start_date_rolling_months ELSE &start_date_MTD;
-*-SET &start_date_2 = IF &start_date_1 LE &start_date_YTD THEN &start_date_1 ELSE &start_date_YTD;
-*-SET &start_date   = IF &start_date_2 LE &start_date_rolling_weeks THEN &start_date_2 ELSE &start_date_rolling_weeks;
-*
-*-SET &end_date_1   = IF &end_date_rolling_months GE &end_date_MTD THEN &end_date_rolling_months ELSE &end_date_MTD;
-*-SET &end_date_2   = IF &end_date_1 GE &end_date_YTD THEN &end_date_1 ELSE &end_date_YTD;
-*-SET &end_date     = IF &end_date_2 GE &end_date_rolling_weeks THEN &end_date_2 ELSE &end_date_rolling_weeks;
-*

-** Need the last 2 weeks
-SET &end_date = &end_date_rolling_weeks;
-SET &start_date = AYMD(&end_date, -14 + 1, 'I8YYMD');

-*-*-*-** ad-hoc
-*-SET &end_date = 20180614;
-*-SET &start_date = 20180614;
-*-*-*-** ad-hoc



-*** Add two extra days because the data extract will be based on FLIGHT_ORIG_DTE, not FLIGHT_ORIG_LCL_DTE
-SET &start_date_extd   = AYMD(&start_date, -1, 'I8YYMD');
-SET &end_date_extd     = AYMD(&end_date,    1, 'I8YYMD');





-*** Display label for the start and end dates

-SET &start_date_disp = EDIT(CHGDAT('YYMD', 'MTDYY', &start_date, 'A12'), '999999,99999');
-SET &start_date_disp =
-  EDIT(&start_date_disp, '9$$$$$$$$$$$') |
-  LOCASE(2, EDIT(&start_date_disp, '$99$$$$$$$$$'), 'A2') |
-  EDIT(&start_date_disp, '$$$999999999');

-SET &end_date_disp = EDIT(CHGDAT('YYMD', 'MTDYY', &end_date,   'A12'), '999999,99999');
-SET &end_date_disp =
-  EDIT(&end_date_disp, '9$$$$$$$$$$$') |
-  LOCASE(2, EDIT(&end_date_disp, '$99$$$$$$$$$'), 'A2') |
-  EDIT(&end_date_disp, '$$$999999999');

-SET &date_range_label = 'Date Range: ' | &start_date_disp    | ' - ' | &end_date_disp;





-SET &curr_date = &ASOFDATE;

-SET &curr_date_disp = EDIT(CHGDAT('YYMD', 'MTDYY', &curr_date,   'A12'), '999999,99999');
-SET &curr_date_disp =
-  EDIT(&curr_date_disp, '9$$$$$$$$$$$') |
-  LOCASE(2, EDIT(&curr_date_disp, '$99$$$$$$$$$'), 'A2') |
-  EDIT(&curr_date_disp, '$$$999999999');

-SET &report_run_date_label = 'Report Run Date: ' | &curr_date_disp;





-TYPE end_date_rolling_weeks &end_date_rolling_weeks

-TYPE start_date &start_date
-TYPE end_date   &end_date

-TYPE start_date_extd &start_date_extd
-TYPE end_date_extd   &end_date_extd

-TYPE date_range_label  &date_range_label

-TYPE report_run_date_label &report_run_date_label

-*-EXIT







-*** Get all fin changes straight from teradata
ENGINE SQLSNO SET DEFAULT_CONNECTION sf_ops
SQL SQLSNO PREPARE FIN_CHANGE_SQLOUT_01 FOR

-* TRANSLATED QUERY

SELECT
    CAST (CONCAT(A.POSTDATE,' ',CAST (A.POSTTIME AS CHAR(10))) AS TIMESTAMP_NTZ(9)) AS POST_TMS,
    B.CARRIER_CDE,
    A.LEG_ID,
    B.FLIGHT_NUM,
    B.FLIGHT_ORIG_LCL_DTE,
    B.LEG_ACTL_ORIG,
    B.LEG_ACTL_DEST,
    B.LEG_SCHD_DEP_LCL_TMS,
    CAST(B.LEG_DEP_DELAY_PRMY_CDE AS CHAR(3)) LEG_DEP_DELAY_PRMY_CDE,
    CAST (CASE
          WHEN UPPER(TRIM(B.LEG_ACTL_ORIG)) IN (('YYZ'),('YUL'),('YVR'),('YYC')) 	THEN B.LEG_ACTL_ORIG
          WHEN UPPER(TRIM(S.COUNTRY_CODE)) = UPPER(TRIM('US')) 						THEN 'USA'
          WHEN UPPER(TRIM(S.COUNTRY_CODE)) NOT IN (('US'), ('CA')) 					THEN 'INT'	ELSE 'ZZZ'
		  END AS CHAR(3)) AS HUB,
    CASE
        WHEN B.LEG_SCHD_DEP_TMS IS NULL THEN NULL
-* TM-6242: SIT remediation - Update logic for Time difference calculation in Minutes - Ngoc - Nov 03        
        ELSE timediff(minute, POST_TMS, B.LEG_SCHD_DEP_TMS)
-*         ELSE (
-*             CAST(TIMESTAMPDIFF(DAY, POST_TMS, B.LEG_SCHD_DEP_TMS) AS INT) * 24 * 60 + 
-* 			CAST(FLOOR(TIMESTAMPDIFF (HOUR, POST_TMS, B.LEG_SCHD_DEP_TMS) / 24) AS INT) * 60 + 
-* 			CAST(MOD(TIMESTAMPDIFF(MINUTE, POST_TMS, B.LEG_SCHD_DEP_TMS),60) AS INT)
-* 			 )
		END AS MIN_BEFORE_SCHED_DEP,
    MAX (A.ACFT_REGS_CDE) OVER (PARTITION BY A.LEG_ID ORDER BY A.POSTDATE, A.POSTTIME, A.LEG_UPDATE_NUM ROWS BETWEEN 1 PRECEDING AND 1 PRECEDING) AS ACFT_REGS_CDE_PREV,
    A.ACFT_REGS_CDE,
    MAX (A.ACFT_SUBTYPE_CDE) OVER (PARTITION BY A.LEG_ID ORDER BY A.POSTDATE, A.POSTTIME, A.LEG_UPDATE_NUM ROWS BETWEEN 1 PRECEDING AND 1 PRECEDING) AS ACFT_SUBTYPE_CDE_PREV,
    A.ACFT_SUBTYPE_CDE,
    CASE WHEN ACFT_REGS_CDE_PREV <> A.ACFT_REGS_CDE THEN 1 ELSE 0 END AS FIN_CHANGE_COUNT,
    CASE WHEN MIN_BEFORE_SCHED_DEP >= 0 AND MIN_BEFORE_SCHED_DEP < 4 * 60 THEN FIN_CHANGE_COUNT ELSE 0 END AS FIN_CHANGES_1_4,
    CASE WHEN MIN_BEFORE_SCHED_DEP >= 4 * 60 AND MIN_BEFORE_SCHED_DEP < 8 * 60 THEN FIN_CHANGE_COUNT ELSE 0 END AS FIN_CHANGES_4_8,
    CASE WHEN FIN_CHANGE_COUNT = 1 AND C.LEG_ID IS NOT NULL THEN 1 ELSE 0 END AS NEW_FIN_ON_GROUND_COUNT,

-* TM-6242: SIT remediation - Update logic for Time difference calculation in Minutes - Ngoc - Nov 03            
-*   (C.ACTUAL_GROUND_TME / 1440) AS DAYS,
-*   ((C.ACTUAL_GROUND_TME - ((C.ACTUAL_GROUND_TME / 1440) * 1440)) / 60) AS HOURS,
-*   (C.ACTUAL_GROUND_TME - ((C.ACTUAL_GROUND_TME / 1440) * 1440) - (((C.ACTUAL_GROUND_TME - ((C.ACTUAL_GROUND_TME / 1440) * 1440)) / 60) * 60)) AS MINUTES,
-*     DATEADD(MINUTE,-(DAYS+HOURS+MINUTES),C.LEG_ACTL_DEP_TMS) AS PREV_LEG_ACTL_ARR_TMS
	C.ACTUAL_GROUND_TME,
	C.LEG_ACTL_DEP_TMS,    
    DATEADD(minute, -1*C.ACTUAL_GROUND_TME, C.LEG_ACTL_DEP_TMS ) as PREV_LEG_ACTL_ARR_TMS
	
FROM PEDW.LEG_SCHEDULED_HIST 					AS A
INNER JOIN PEDW.LEG_FLOWN 						AS B ON (B.LEG_ID 						= A.LEG_ID)
LEFT OUTER JOIN PEDW_SOC.REF_OPRN_FLIGHT_RANGE 	AS R ON (UPPER(TRIM(B.CARRIER_CDE)) 	= UPPER(TRIM(R.CARRIER_CDE))
													AND (B.FLIGHT_NUM BETWEEN R.FLIGHT_RNG_STRT AND R.FLIGHT_RNG_END)
													AND (B.FLIGHT_ORIG_LCL_DTE BETWEEN R.EFF_FROM_DTE AND R.EFF_TO_DTE))
LEFT OUTER JOIN PEDW.LEG_FLOWN 					AS C ON (UPPER(TRIM(C.ACFT_REGS_CDE)) 	= UPPER(TRIM(A.ACFT_REGS_CDE))
													AND UPPER(TRIM(C.CARRIER_CDE)) 		= UPPER(TRIM(A.CARRIER_CDE))
													AND UPPER(TRIM(C.LEG_SCHD_ORIG)) 	= UPPER(TRIM(B.LEG_SCHD_ORIG))
-* TM-6242: SIT remediation - Update JOIN condition - Not necessary to redefine the field here - Ngoc - Nov 03      
                                                    AND MIN_BEFORE_SCHED_DEP <= 2 * 60
                                                    AND POST_TMS BETWEEN PREV_LEG_ACTL_ARR_TMS AND c.LEG_ACTL_DEP_TMS  )
-* 	AND CASE
-* 		WHEN B.LEG_SCHD_DEP_TMS IS NULL THEN NULL
-* 		ELSE (CAST(TIMESTAMPDIFF(DAY,CAST(CONCAT(A.POSTDATE,' ',CAST (A.POSTTIME AS CHAR(10))) AS TIMESTAMP_NTZ(9)), B.LEG_SCHD_DEP_TMS) AS INT) * 24 * 60 +
-* 			  CAST(FLOOR(TIMESTAMPDIFF (HOUR,CAST (CONCAT(A.POSTDATE,' ',CAST (A.POSTTIME AS CHAR(10))) AS TIMESTAMP_NTZ(9)), B.LEG_SCHD_DEP_TMS) / 24) AS INT) * 60 +
-* 			  CAST(MOD(TIMESTAMPDIFF(MINUTE, CAST (CONCAT(A.POSTDATE,' ',CAST (A.POSTTIME AS CHAR(10))) AS TIMESTAMP_NTZ(9)), B.LEG_SCHD_DEP_TMS),60 ) AS INT)) END <= 2 * 60
-* 	AND (CAST(CONCAT(A.POSTDATE,' ',CAST (A.POSTTIME AS CHAR(10))) AS TIMESTAMP_NTZ(9)) BETWEEN DATEADD(MINUTE,-((C.ACTUAL_GROUND_TME / 1440) + 															((C.ACTUAL_GROUND_TME - ((C.ACTUAL_GROUND_TME / 1440) * 1440)) / 60)+ (C.ACTUAL_GROUND_TME - ((C.ACTUAL_GROUND_TME / 1440) * 1440) - (((C.ACTUAL_GROUND_TME - ((C.ACTUAL_GROUND_TME / 1440) * 1440)) / 60) * 60))),C.LEG_ACTL_DEP_TMS) AND C.LEG_ACTL_DEP_TMS))
LEFT OUTER JOIN PEDW_SOC.SOC_STATION_DIM_C 		AS S ON (UPPER(TRIM(S.IATA_AIRPORT_CODE)) = UPPER(TRIM(B.LEG_ACTL_ORIG)))

WHERE UPPER(TRIM(A.CARRIER_CDE)) = UPPER(TRIM('AC'))
AND UPPER(TRIM(B.CARRIER_CDE)) = UPPER(TRIM('AC'))
AND (A.FLIGHT_ORIG_DTE BETWEEN TO_DATE('&start_date_extd', 'yyyyMMdd') AND TO_DATE('&end_date_extd', 'yyyyMMdd'))
AND (B.FLIGHT_ORIG_DTE BETWEEN TO_DATE('&start_date_extd', 'yyyyMMdd') AND TO_DATE('&end_date_extd', 'yyyyMMdd'))
AND UPPER(TRIM(A.ACFT_REGS_CDE)) <> UPPER(TRIM('XXXXX'))
AND TRIM(A.ACFT_REGS_CDE) NOT LIKE ((('%OV')))
-* TM-6242: SIT remediation - Update WHERE condition - Not necessary to redefine the field here  - Ngoc - Nov 03      
AND MIN_BEFORE_SCHED_DEP  < 8 * 60
-* AND CASE
-*     WHEN B.LEG_SCHD_DEP_TMS IS NULL THEN NULL
-*     ELSE (
-*         CAST(
-*             TIMESTAMPDIFF(DAY, POST_TMS, B.LEG_SCHD_DEP_TMS) AS INT
-* 			) * 24 * 60 + 
-* 		CAST(
-*             FLOOR(
-*                 TIMESTAMPDIFF (HOUR, POST_TMS, B.LEG_SCHD_DEP_TMS) / 24
-* 				 ) AS INT
-* 			) * 60 + 
-* 		CAST(
-*             MOD(TIMESTAMPDIFF(MINUTE, POST_TMS, B.LEG_SCHD_DEP_TMS),60) AS INT
-* 			)
-* 		 ) END < 8 * 60
		 
AND R.OPRN_INCL_FLG = 1
AND (B.LEG_DVRT_IND IS NULL OR UPPER(TRIM(B.LEG_DVRT_IND)) = UPPER(TRIM('D')))
AND (UPPER(TRIM(B.LEG_ACTL_ORIG)) IN (('YYZ'),('YUL'),('YVR'),('YYC')) OR UPPER(TRIM(S.COUNTRY_CODE)) = UPPER(TRIM('US')) OR (UPPER(TRIM(S.COUNTRY_CODE)) NOT IN (('US'), ('CA'))))
 QUALIFY FIN_CHANGES_1_4 = 1 OR FIN_CHANGES_4_8 = 1 OR NEW_FIN_ON_GROUND_COUNT = 1
 ;
END

TABLE FILE FIN_CHANGE_SQLOUT_01
PRINT
  LEG_ID
  CARRIER_CDE

-*  COMPUTE FLIGHT_ORIG_LCL_DTE_1/YYMD = DATECVT(EDIT(FLIGHT_ORIG_LCL_DTE, '9999$99$99'), 'A8YYMD', 'YYMD'); AS FLIGHT_ORIG_LCL_DTE
  FLIGHT_ORIG_LCL_DTE

  FLIGHT_NUM
  LEG_ACTL_ORIG
  LEG_ACTL_DEST

-*  COMPUTE LEG_SCHD_DEP_LCL_TMS_1/HYYMDS = HINPUT(19, LEG_SCHD_DEP_LCL_TMS, 8, 'HYYMDS'); AS LEG_SCHD_DEP_LCL_TMS
	LEG_SCHD_DEP_LCL_TMS

  LEG_DEP_DELAY_PRMY_CDE
  HUB

  ACFT_REGS_CDE
  ACFT_REGS_CDE_PREV

  ACFT_SUBTYPE_CDE
  ACFT_SUBTYPE_CDE_PREV

  COMPUTE FIN_CHANGE_CATEGORY_SORT/I11 MISSING ON =
    IF (FIN_CHANGES_1_4 EQ 1) THEN 1 ELSE
	IF (FIN_CHANGES_4_8 EQ 1) THEN 2 ELSE
	IF (NEW_FIN_ON_GROUND_COUNT EQ 1) THEN 3 ELSE 99;

  COMPUTE FIN_CHANGE_CATEGORY/A50 MISSING ON =
    IF (FIN_CHANGES_1_4 EQ 1) THEN 'NORMAL CHANGES' ELSE
	IF (FIN_CHANGES_4_8 EQ 1) THEN 'URGENT CHANGES' ELSE
	IF (NEW_FIN_ON_GROUND_COUNT EQ 1) THEN 'IRROP CHANGES' ELSE MISSING;


  MIN_BEFORE_SCHED_DEP

ON TABLE HOLD AS WOR02_FIN_CHANGE_DATA_HOLD_01 FORMAT FOCUS
-*ON TABLE PCHOLD FORMAT EXL07

END

-*-EXIT














-*
-*
-*-*** Get Normal and Urgent fin changes straight from teradata
-*ENGINE SQLSNO SET DEFAULT_CONNECTION teradprd.aircanada.ca
-*SQL SQLSNO PREPARE FIN_CHANGE_SQLOUT_02 FOR
-*
-*select
-*  a.LEG_ID,
-*  b.CARRIER_CDE,
-*  b.FLIGHT_ORIG_LCL_DTE,
-*  b.FLIGHT_NUM,
-*  b.LEG_ACTL_ORIG,
-*  b.LEG_ACTL_DEST,
-*  b.LEG_SCHD_DEP_LCL_TMS,
-*  b.LEG_DEP_DELAY_PRMY_CDE,
-*
-*  case
-*    when b.LEG_ACTL_ORIG in ('YYZ', 'YUL', 'YVR', 'YYC')
-*      then b.LEG_ACTL_ORIG
-*    when s.Country_Code = 'US'
-*      then 'USA'
-*    when s.Country_Code not in ('US', 'CA')
-*      then 'INT'
-*    else 'ZZZ'
-*  end (char(3)) as HUB,
-*
-*  cast(a.POSTDATE || ' ' || cast(a.POSTTIME as char(10)) as timestamp(0)) as POST_TMS,
-*
-*  a.ACFT_REGS_CDE,
-*
-*  max(a.ACFT_REGS_CDE)
-*    over( partition by a.LEG_ID
-*          order by a.POSTDATE, a.POSTTIME, a.LEG_UPDATE_NUM
-*          rows between 1 preceding and 1 preceding
-*        ) as ACFT_REGS_CDE_PREV,
-*
-*  case
-*    when ACFT_REGS_CDE_PREV <> a.ACFT_REGS_CDE
-*      then 1
-*    else 0
-*  end as FIN_CHANGE_COUNT,
-*
-*  case
-*    when FIN_CHANGE_COUNT = 1 and
-*         c.leg_id is not null and
-*         c.LEG_SCHD_ORIG = b.LEG_SCHD_ORIG and
-*         POST_TMS >= (b.LEG_SCHD_DEP_TMS - (interval '2' hour))
-*      then 1
-*    else 0
-*  end as NEW_FIN_ON_GROUND_FLAG,
-*
-*  (c.ACTUAL_GROUND_TME/1440) (interval day(4)) as days,
-*  ((c.ACTUAL_GROUND_TME - ((c.ACTUAL_GROUND_TME/1440)*1440))/60) (interval hour(4)) as hours,
-*  (c.ACTUAL_GROUND_TME - ((c.ACTUAL_GROUND_TME/1440)*1440) - (((c.ACTUAL_GROUND_TME - ((c.ACTUAL_GROUND_TME/1440)*1440))/60)*60)) (interval minute(4)) as minutes,
-*  (c.LEG_ACTL_DEP_TMS - days - hours - minutes) as PREV_LEG_ACTL_ARR_TMS,
-*
-*
-*  case
-*    when b.LEG_SCHD_DEP_TMS is null
-*      then null
-*    when a.POSTDATE is null
-*      then null
-*    when abs(b.LEG_SCHD_DEP_DTE - a.POSTDATE) < 1
-*      then
-*        cast(((b.LEG_SCHD_DEP_TMS - POST_TMS) minute(4)) as integer)
-*    else 24*60 + 1
-*  end as MIN_BEFORE_SCHED_DEP,
-*
-*  case
-*    when MIN_BEFORE_SCHED_DEP >= 0 and MIN_BEFORE_SCHED_DEP < 4*60
-*      then FIN_CHANGE_COUNT
-*    else 0
-*  end as FIN_CHANGES_1_4,
-*
-*  case
-*    when MIN_BEFORE_SCHED_DEP >= 4*60 and MIN_BEFORE_SCHED_DEP < 8*60
-*      then FIN_CHANGE_COUNT
-*    else 0
-*  end as FIN_CHANGES_4_8
-*
-*
-*from
-*  PEDW.LEG_SCHEDULED_HIST as a
-*  inner join pedw.leg_flown as b on
-*  ( b.leg_id = a.leg_id
-*  )
-*  left outer join pedw_soc.REF_OPRN_FLIGHT_RANGE as r on
-*  ( b.FLIGHT_NUM between r.FLIGHT_RNG_STRT and r.FLIGHT_RNG_END and
-*    b.FLIGHT_ORIG_LCL_DTE between r.EFF_FROM_DTE and r.EFF_TO_DTE
-*  )
-*
-*  left outer join pedw.leg_flown as c on
-*  ( c.ACFT_REGS_CDE = a.ACFT_REGS_CDE and
-*    c.CARRIER_CDE   = a.CARRIER_CDE   and
-*    c.LEG_SCHD_ORIG = b.LEG_SCHD_ORIG and
-*
-*    POST_TMS between PREV_LEG_ACTL_ARR_TMS and c.LEG_ACTL_DEP_TMS
-*  )
-*
-*  left outer join SOC_Station_Dim_C as s on
-*  ( s.IATA_Airport_Code = b.LEG_ACTL_ORIG
-*  )
-*
-*where
-*  a.ACFT_REGS_CDE <> 'XXXXX' and
-*  trim(a.ACFT_REGS_CDE) not like '%OV' and
-*
-*  a.CARRIER_CDE = 'AC' and
-*  r.OPRN_INCL_FLG = 1 and
-*  a.FLIGHT_ORIG_DTE between ('&start_date_extd' (date, format 'yyyymmdd')) and ('&end_date_extd' (date, format 'yyyymmdd'))
-*
-*  and
-*  ( b.LEG_ACTL_ORIG in ('YYZ', 'YUL', 'YVR', 'YYC') or
-*    s.Country_Code = 'US' or
-*	( s.Country_Code not in ('US', 'CA')
-*	)
-*  )
-*
-*qualify
-*  FIN_CHANGES_1_4 = 1 or
-*  FIN_CHANGES_4_8 = 1
-*
-*END
-*
-*
-*
-*
-*
-*TABLE FILE FIN_CHANGE_SQLOUT_02
-*PRINT
-*  LEG_ID
-*  CARRIER_CDE
-*
-*  COMPUTE FLIGHT_ORIG_LCL_DTE_1/YYMD = DATECVT(EDIT(FLIGHT_ORIG_LCL_DTE, '9999$99$99'), 'A8YYMD', 'YYMD'); AS FLIGHT_ORIG_LCL_DTE
-*
-*  FLIGHT_NUM
-*  LEG_ACTL_ORIG
-*  LEG_ACTL_DEST
-*
-*  COMPUTE LEG_SCHD_DEP_LCL_TMS_1/HYYMDS = HINPUT(19, LEG_SCHD_DEP_LCL_TMS, 8, 'HYYMDS'); AS LEG_SCHD_DEP_LCL_TMS
-*
-*  LEG_DEP_DELAY_PRMY_CDE
-*  HUB
-*
-*  ACFT_REGS_CDE
-*  ACFT_REGS_CDE_PREV
-*
-*  COMPUTE FIN_CHANGE_CATEGORY_SORT/I11 MISSING ON =
-*    IF (FIN_CHANGES_1_4 EQ 1) THEN 1 ELSE
-*	IF (FIN_CHANGES_4_8 EQ 1) THEN 2 ELSE 99;
-*
-*  COMPUTE FIN_CHANGE_CATEGORY/A50 MISSING ON =
-*    IF (FIN_CHANGES_1_4 EQ 1) THEN 'NORMAL CHANGES' ELSE
-*	IF (FIN_CHANGES_4_8 EQ 1) THEN 'URGENT CHANGES' ELSE MISSING;
-*
-*ON TABLE HOLD AS WOR02_FIN_CHANGE_DATA_HOLD_02 FORMAT FOCUS
-*
-*END
-*
-*-*-EXIT
-*


















-*TABLE FILE WOR02_FIN_CHANGE_DATA_HOLD_01
-*PRINT
-*  LEG_ID
-*  CARRIER_CDE
-*  FLIGHT_ORIG_LCL_DTE
-*
-*  FLIGHT_NUM
-*  LEG_ACTL_ORIG
-*  LEG_ACTL_DEST
-*  LEG_SCHD_DEP_LCL_TMS
-*  LEG_DEP_DELAY_PRMY_CDE
-*  HUB
-*
-*  ACFT_REGS_CDE
-*  ACFT_REGS_CDE_PREV
-*
-*  FIN_CHANGE_CATEGORY_SORT
-*  FIN_CHANGE_CATEGORY
-*
-*ON TABLE HOLD AS WOR02_FIN_CHANGE_DATA_HOLD_03 FORMAT FOCUS
-*
-*MORE
-*FILE WOR02_FIN_CHANGE_DATA_HOLD_02
-*
-*END




TABLE FILE WOR02_FIN_CHANGE_DATA_HOLD_01
PRINT
  LEG_ID
  CARRIER_CDE
  FLIGHT_ORIG_LCL_DTE

  FLIGHT_NUM
  LEG_ACTL_ORIG
  LEG_ACTL_DEST
  LEG_SCHD_DEP_LCL_TMS
  LEG_DEP_DELAY_PRMY_CDE
  HUB

  ACFT_REGS_CDE
  ACFT_REGS_CDE_PREV

  ACFT_SUBTYPE_CDE
  ACFT_SUBTYPE_CDE_PREV

  FIN_CHANGE_CATEGORY_SORT
  FIN_CHANGE_CATEGORY

  MIN_BEFORE_SCHED_DEP

-*WHERE (FLIGHT_ORIG_LCL_DTE GE &start_date) AND (FLIGHT_ORIG_LCL_DTE LE &end_date);
WHERE FLIGHT_ORIG_LCL_DTE FROM &start_date TO &end_date;

ON TABLE HOLD AS WOR02_FIN_CHANGE_DATA_HOLD_04 FORMAT FOCUS

END

-*-EXIT





TABLE FILE WOR02_FIN_CHANGE_DATA_HOLD_04
PRINT
     WOR02_FIN_CHANGE_DATA_HOLD_04.SEG01.LEG_ACTL_ORIG
     WOR02_FIN_CHANGE_DATA_HOLD_04.SEG01.LEG_ACTL_DEST
     WOR02_FIN_CHANGE_DATA_HOLD_04.SEG01.LEG_SCHD_DEP_LCL_TMS
     WOR02_FIN_CHANGE_DATA_HOLD_04.SEG01.LEG_DEP_DELAY_PRMY_CDE
     WOR02_FIN_CHANGE_DATA_HOLD_04.SEG01.MIN_BEFORE_SCHED_DEP
     WOR02_FIN_CHANGE_DATA_HOLD_04.SEG01.ACFT_SUBTYPE_CDE_PREV
     WOR02_FIN_CHANGE_DATA_HOLD_04.SEG01.ACFT_SUBTYPE_CDE
     WOR02_FIN_CHANGE_DATA_HOLD_04.SEG01.ACFT_REGS_CDE_PREV
     WOR02_FIN_CHANGE_DATA_HOLD_04.SEG01.ACFT_REGS_CDE
BY  LOWEST WOR02_FIN_CHANGE_DATA_HOLD_04.SEG01.FIN_CHANGE_CATEGORY_SORT NOPRINT
BY  LOWEST WOR02_FIN_CHANGE_DATA_HOLD_04.SEG01.FIN_CHANGE_CATEGORY
BY  LOWEST WOR02_FIN_CHANGE_DATA_HOLD_04.SEG01.HUB
BY  LOWEST WOR02_FIN_CHANGE_DATA_HOLD_04.SEG01.FLIGHT_ORIG_LCL_DTE
BY  LOWEST WOR02_FIN_CHANGE_DATA_HOLD_04.SEG01.CARRIER_CDE
BY  LOWEST WOR02_FIN_CHANGE_DATA_HOLD_04.SEG01.FLIGHT_NUM
ON TABLE SUBHEAD
"Aircraft Changes Before Departure - AC Mainline"
HEADING
"&report_run_date_label"
"&date_range_label"
ON TABLE SET PAGE-NUM NOLEAD
ON TABLE NOTOTAL
ON TABLE PCHOLD FORMAT EXL07
ON TABLE SET HTMLCSS ON
ON TABLE SET STYLE *
-*     INCLUDE = ../Supporting_Files/endeflt.sty,
-*    INCLUDE = IBFS:/WFC/Repository/SOC/Production/Supporting_Files/endeflt.sty,
	INCLUDE = IBFS:/EDA/EDASERVE/Ops_Analytics/styles/endeflt.sty,
$
TYPE=REPORT,
     GRAPHCOLOR='GREEN',
$
TYPE=REPORT,
     FONT='CALIBRI',
     SIZE=8,
$
TYPE=DATA,
     BACKCOLOR='NONE',
$
TYPE=DATA,
     COLUMN=N3,
     BACKCOLOR='NONE',
$
TYPE=TABHEADING,
     LINE=1,
     JUSTIFY=LEFT,
$
TYPE=TABHEADING,
     LINE=1,
     OBJECT=TEXT,
     ITEM=1,
     STYLE=BOLD,
$
TYPE=HEADING,
     LINE=1,
     JUSTIFY=LEFT,
$
TYPE=HEADING,
     LINE=1,
     OBJECT=TEXT,
     ITEM=1,
     STYLE=NORMAL,
$
TYPE=HEADING,
     LINE=2,
     JUSTIFY=LEFT,
$
TYPE=HEADING,
     LINE=2,
     OBJECT=TEXT,
     ITEM=1,
     STYLE=NORMAL,
$
TYPE=REPORT,
     OBJECT=MENU,
     COLOR='WHITE',
     HOVER-COLOR=RGB(66 70 73),
     BACKCOLOR=RGB(102 102 102),
     HOVER-BACKCOLOR=RGB(218 225 232),
     BORDER-COLOR='WHITE',
$
TYPE=REPORT,
     OBJECT=STATUS-AREA,
     COLOR='WHITE',
     BACKCOLOR=RGB(102 102 102),
$
TYPE=REPORT,
     OBJECT=CURRENT-ROW,
     HOVER-BACKCOLOR=RGB(218 225 232),
     BACKCOLOR=RGB(200 200 200),
$
TYPE=REPORT,
     OBJECT=CALC-AREA,
     COLOR='WHITE',
     BACKCOLOR=RGB(102 102 102),
$
TYPE=REPORT,
     COLUMN=ROWTOTAL(*),
     FONT='CALIBRI',
     SIZE=8,
$
ENDSTYLE
END
