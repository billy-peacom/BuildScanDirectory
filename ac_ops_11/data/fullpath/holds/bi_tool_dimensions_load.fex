
-* File: bi_tool_dimensions_load.fex
-* TM-2262: Bring update in March by Hugh from TD to SF
-* 2022-03-28 updated to expand to include 2019 - Hugh Williams AC072282

-*-SET &ECHO = ALL;

-SET &END_DATE   = AYMD(&YYMD, 10, 'I8YYMD');
-*-SET &END_DATE   = &YYMD;

-* TM-2262: Bring update in March by Hugh from TD to SF
-* -SET &START_DATE = AYMD(&END_DATE, (-365)*2, 'I8YYMD');
-SET &START_DATE = AYMD(&END_DATE, (-365)*4, 'I8YYMD');

SET HOLDLIST = PRINTONLY
SET BYDISPLAY = ON
SET ASNAMES = ON


-*SET TRACEOFF=ALL
-*SET TRACEON=SQLAGGR//CLIENT
-*SET TRACEON=STMTRACE//CLIENT
-*SET TRACEUSER=CLIENT
-*SET XRETRIEVAL = OFF


APP HOLD admin/data

TABLE FILE REF_OPRN_FLIGHT_RANGE
BY CARRIER_CDE
ON TABLE HOLD AS BI_CARRIERCDE_TD FORMAT XFOCUS
END

TABLE FILE REF_OPRN_FLIGHT_RANGE
BY CARRIER_NME
BY CARRIER_CDE
WHERE (EFF_FROM_DTE LE '&START_DATE' AND EFF_TO_DTE GE '&START_DATE') OR (EFF_FROM_DTE LE '&END_DATE' AND EFF_TO_DTE GE '&END_DATE');
ON TABLE HOLD AS BI_CARRIERNME_TD FORMAT XFOCUS
END

TABLE FILE REF_OPRN_FLIGHT_RANGE
BY CARRIER_NME
BY FLIGHT_GROUP
WHERE (EFF_FROM_DTE LE '&START_DATE' AND EFF_TO_DTE GE '&START_DATE') OR (EFF_FROM_DTE LE '&END_DATE' AND EFF_TO_DTE GE '&END_DATE');
ON TABLE HOLD AS BI_CARRIERNME_FLTGRP_TD FORMAT XFOCUS
END

TABLE FILE TD_CANCEL_CODE_MASTER
BY LOWEST CANCEL_REASON_CODE_PRI
BY LOWEST CANCEL_REASON_CODE_AC AS CANCEL_REASON_CODE_SECD
-*WHERE (EFFECTIVE_START_DT LE '&START_DATE' AND EFFECTIVE_END_DT GE '&START_DATE') OR (EFFECTIVE_START_DT LE '&END_DATE' AND EFFECTIVE_END_DT GE '&END_DATE');
WHERE (EFFECTIVE_START_DT LE '&YYMD' AND EFFECTIVE_END_DT GE '&YYMD');
ON TABLE HOLD AS BI_CNLCODE_TD FORMAT XFOCUS
END

TABLE FILE DELAY_CODE_MASTER
BY LOWEST DELAY_CODE_PRIMARY_AC
BY LOWEST DELAY_CODE_SECONDARY_AC
WHERE DELAY_CODE_PRIMARY_AC NE 'ZZZ' AND DELAY_CODE_SECONDARY_AC NE 'ZZZ';
-*WHERE (EFFECTIVE_START_DT LE '&START_DATE' AND EFFECTIVE_END_DT GE '&START_DATE') OR (EFFECTIVE_START_DT LE '&END_DATE' AND EFFECTIVE_END_DT GE '&END_DATE');
WHERE (EFFECTIVE_START_DT LE '&YYMD' AND EFFECTIVE_END_DT GE '&YYMD');
ON TABLE HOLD AS BI_DLYCODE_TD FORMAT XFOCUS
END


JOIN LEFT_OUTER
	LEG_SCHD_ORIG IN LEG_SCHEDULED TO MULTIPLE
	IATA_AIRPORT_CODE IN &&OPS_MASTER/STATION_MASTER TAG J1 AS J1
END

TABLE FILE LEG_SCHEDULED
BY LOWEST J1.REGIONS AS REGION
BY LOWEST LEG_SCHD_ORIG AS AIRPORT
WHERE (CARRIER_CDE IN ('AC', 'QK', 'ZX', 'RV', 'PB'));
WHERE (FLIGHT_ORIG_LCL_DTE FROM '&START_DATE' TO '&END_DATE');
ON TABLE HOLD AS BI_STN_TD FORMAT XFOCUS
END

TABLE FILE REF_AIRCRAFT_TD
BY  LOWEST ACFT_OWNER_CDE AS CARRIER_CDE
BY  LOWEST ACFT_SUBTYPE_CDE AS FLEET
WHERE (ACFT_OWNER_CDE IN ('AC', 'QK', 'ZX', 'RV', 'PB'));
WHERE (ACFT_STATE_CDE EQ 'R');
WHERE (ACFT_EFF_FROM_DTE LE '&START_DATE' AND ACFT_EFF_TO_DTE GE '&START_DATE') OR (ACFT_EFF_FROM_DTE LE '&END_DATE' AND ACFT_EFF_TO_DTE GE '&END_DATE');
ON TABLE HOLD AS BI_FLEET_TD FORMAT XFOCUS
END
-*-EXIT

TABLE FILE LEG_FLOWN
BY CARRIER_NME
BY IATA_CDE
BY ACFT_SUBTYPE_CDE AS 'FLEET'
WHERE (FLIGHT_ORIG_LCL_DTE FROM '&START_DATE' TO '&END_DATE');
WHERE (OTP_INCLUDE_FLAG EQ 1);
ON TABLE HOLD AS BI_FLEET_CARR_TD FORMAT XFOCUS INDEX CARRIER_NME
END

TABLE FILE LEG_INCIDENT
BY LEG_DVRT_RSN
WHERE (FLIGHT_ORIG_LCL_DTE FROM '&START_DATE' TO '&END_DATE');
ON TABLE HOLD AS BI_DVRTCODE_TD FORMAT XFOCUS
END


-*TABLE FILE BI_STAR_CUST_CMPNT
-*BY DEPARTMENT
-*BY CATEGORY
-*BY SUB_CATEGORY
-*BY CATEGORY_TYPE
-*BY COMP_STS
-*WHERE (CRT_DTE_YYMD FROM '&START_DATE' TO '&END_DATE');
-*ON TABLE HOLD AS BI_CUST_RELATIONS_DIM_TD FORMAT XFOCUS
-*END


ENGINE SQLSNO SET DEFAULT_CONNECTION sf_ops
SQL SQLSNO PREPARE SQLOUT FOR
-* TRANSLATED QUERY

SELECT
        FLIGHT_NUM
    FROM
        PEDW.LEG_FLOWN
    WHERE
        (
            FLIGHT_ORIG_LCL_DTE BETWEEN (CURRENT_DATE()- interval '2 YEAR') AND CURRENT_DATE()
        )
    GROUP BY
        FLIGHT_NUM;
END

TABLE FILE SQLOUT
 BY FLIGHT_NUM
ON TABLE HOLD AS BI_FLIGHT_NUM_TD FORMAT XFOCUS
END



ENGINE SQLSNO SET DEFAULT_CONNECTION sf_ops
SQL SQLSNO PREPARE SQLOUT2 FOR

-* TRANSLATED QUERY (Corrected)

SELECT
    CASE
        WHEN upper(trim(T1.TEMPL_ID)) = upper(
            trim('template_17C5BA4E63EF48AB9129858C1699BEED')
        ) THEN H1.RESP_SEL_LBL
        WHEN upper(trim(T1.TEMPL_ID)) = upper(
            trim('template_196f086cad39483abf28e83f95fd376b')
        ) THEN H1.RESP_SEL_LBL
        WHEN upper(trim(T1.TEMPL_ID)) = upper(
            trim('template_BA9D28A000704DCABFFB9D72D493E796')
        ) THEN H1.RESP_SEL_LBL
        WHEN upper(trim(T1.TEMPL_ID)) = upper(
            trim('template_12A3D716B2874E0EAF37278D4D54717F')
        ) THEN H1.RESP_SEL_LBL
        WHEN upper(trim(T1.TEMPL_ID)) = upper(
            trim('template_637A5258345E4D64B253994614F75900')
        ) THEN H1.RESP_SEL_LBL
        WHEN upper(trim(T1.TEMPL_ID)) = upper(
            trim('template_AD6E5DD0EF124907912F1E859885D3B7')
        ) THEN H1.RESP_SEL_LBL
        WHEN upper(trim(T1.TEMPL_ID)) = upper(
            trim('template_FFF7C1D6C5C6471DB056E4C4BF83854B')
        ) THEN H1.RESP_SEL_LBL
        WHEN upper(trim(H11.RESP_SEL_LBL)) = upper(trim('B0S')) THEN 'BOS'
        ELSE H11.RESP_SEL_LBL
    END AS "AIRPORT"
FROM
    PEDW.OPER_AUD_TEMPL AS T1
    LEFT OUTER JOIN PEDW.OPER_AUD_HEADER_ITEMS AS H1 ON upper(trim(T1.AUD_ID)) = upper(trim(H1.AUD_ID))
    AND upper(trim(H1.ITEM_LBL)) = upper(trim('Station'))
    LEFT OUTER JOIN PEDW.OPER_AUD_HEADER_ITEMS AS H11 ON upper(trim(T1.AUD_ID)) = upper(trim(H11.AUD_ID))
    AND upper(trim(H11.ITEM_LBL)) LIKE upper(trim('%Airport%'))
    AND H11.RESP_SEL_LBL IS NOT NULL
WHERE
    AIRPORT IS NOT NULL
GROUP BY
    AIRPORT;
END
TABLE FILE SQLOUT2
BY AIRPORT
ON TABLE HOLD AS BI_QA_STATIONS_TD FORMAT XFOCUS
END


ENGINE SQLORA SET DEFAULT_CONNECTION trax
SQL SQLORA PREPARE TRAX_SQLOUT FOR
SELECT DISTINCT
	LPAD(CHAPTER, 2, '0') AS "CHAPTER"
	,LPAD(SECTION, 2, '0') AS "SECTION"

FROM ODB.DEFECT_REPORT
END
TABLE FILE TRAX_SQLOUT
BY CHAPTER
BY SECTION
ON TABLE HOLD AS BI_CHAPTER_SECTION_TRAX FORMAT XFOCUS
END


ENGINE SQLORA SET DEFAULT_CONNECTION trax
SQL SQLORA PREPARE TRAX_SQLOUT2 FOR
SELECT DISTINCT
 AC_TYPE
,AC_SERIES
,AC
FROM ODB.AC_MASTER
WHERE STATUS = 'ACTIVE' AND AC_FLIGHT_HOURS > 0
END
TABLE FILE TRAX_SQLOUT2
BY AC_TYPE
BY AC_SERIES
BY AC
ON TABLE HOLD AS BI_FLEET_SERIES_FIN_TRAX FORMAT XFOCUS
END


ENGINE SQLORA SET DEFAULT_CONNECTION trax
SQL SQLORA PREPARE TRAX_SQLOUT3 FOR
SELECT
	LOCATION
FROM ODB.LOCATION_MASTER
WHERE MAINTENANCE_FACILITY = 'Y'
END
TABLE FILE TRAX_SQLOUT3
BY LOCATION
ON TABLE HOLD AS BI_ACM_LOCATIONS_TRAX FORMAT XFOCUS
END


ENGINE SQLORA SET DEFAULT_CONNECTION trax
SQL SQLORA PREPARE TRAX_SQLOUT4 FOR
SELECT DISTINCT
 TRIM(WO_CATEGORY) AS CATEGORY
,TRIM(PRIORITY) AS PRIORITY

FROM ODB.WO
END
TABLE FILE TRAX_SQLOUT4
BY CATEGORY
BY PRIORITY
ON TABLE HOLD AS BI_WO_CATEGORIES_PRIORITIES_TRAX FORMAT XFOCUS
END


ENGINE SQLSNO SET DEFAULT_CONNECTION sf_ops
SQL SQLSNO PREPARE ACM_STATIONS FOR
-* TRANSLATED QUERY

SELECT
        CASE
            WHEN (STATION  IS NULL) THEN ''
            ELSE STATION
        END AS "STATION",
        CASE
            WHEN (CATEGORY  IS NULL) THEN ''
            ELSE CATEGORY
        END AS "CATEGORY",
        CASE
            WHEN (REGION  IS NULL) THEN ''
            ELSE REGION
        END AS "REGION",
        CASE
            WHEN (SUB_REGION  IS NULL) THEN ''
            ELSE SUB_REGION
        END AS "SUB_REGION"
    FROM
        PEDW_SOC.ACM_STATION_MASTER;
END
TABLE FILE ACM_STATIONS
BY CATEGORY
BY REGION
BY SUB_REGION
BY STATION
ON TABLE HOLD AS BI_ACM_STATIONS_TRAX FORMAT XFOCUS
END



APP HOLD

-* Work around for WF8 Report Caster limits
-*-INCLUDE IBFS:/WFC/Repository/Ops_Analytics/OPS/Applications/OPS_BI_Tool/Utility_Procedures/bi_tool_guided_metrics.fex
-*-INCLUDE IBFS:/WFC/Repository/Ops_Analytics/OPS/Applications/OPS_BI_Tool/Utility_Procedures/bi_tool_target_metrics.fex
-*-INCLUDE IBFS:/WFC/Repository/Ops_Analytics/OPS/Applications/OPS_BI_Tool/Utility_Procedures/cnx_activity_data_pull.fex

